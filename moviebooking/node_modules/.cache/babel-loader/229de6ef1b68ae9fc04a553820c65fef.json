{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8080/api/auth';\nexport const registerUser = user => {\n  return axios.post(`${API_URL}/register`, user, {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n};\nexport const loginUser = async credentials => {\n  try {\n    const response = await axios.post(`${API_URL}/login`, credentials, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    console.log('Server response:', response);\n    if (response.data && typeof response.data === 'object') {\n      // Store user data and token if needed\n      localStorage.setItem('user', JSON.stringify(response.data));\n      localStorage.setItem('username', response.data.username);\n      return response.data; // Return the user data object\n    } else {\n      throw new Error('Invalid response format');\n    }\n  } catch (error) {\n    console.error('Login error:', error);\n    throw error;\n  }\n};\nconst handleLogout = navigate => {\n  // Remove JWT token from localStorage\n  localStorage.removeItem('user');\n  localStorage.removeItem('username');\n\n  // Optionally, send a request to the backend logout endpoint\n  fetch('http://localhost:8080/api/auth/logout', {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(() => {\n    // Navigate to the login page\n    navigate('/');\n  });\n};\nexport const getUser = username => {\n  return axios.get(`${API_URL}/user`, {\n    params: {\n      username\n    }\n  });\n};","map":{"version":3,"names":["axios","API_URL","registerUser","user","post","headers","loginUser","credentials","response","console","log","data","localStorage","setItem","JSON","stringify","username","Error","error","handleLogout","navigate","removeItem","fetch","method","then","getUser","get","params"],"sources":["D:/EAD-CW/moviebooking/src/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:8080/api/auth';\r\n\r\nexport const registerUser = (user) => {\r\n  return axios.post(`${API_URL}/register`, user, {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  });\r\n};\r\n\r\n\r\n\r\nexport const loginUser = async (credentials) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/login`, credentials, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n\r\n    console.log('Server response:', response);\r\n\r\n    if (response.data && typeof response.data === 'object') {\r\n      // Store user data and token if needed\r\n      localStorage.setItem('user', JSON.stringify(response.data));\r\n      localStorage.setItem('username', response.data.username);\r\n      return response.data;  // Return the user data object\r\n    } else {\r\n      throw new Error('Invalid response format');\r\n    }\r\n  } catch (error) {\r\n    console.error('Login error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst handleLogout = (navigate) => {\r\n  // Remove JWT token from localStorage\r\n  localStorage.removeItem('user');\r\n  localStorage.removeItem('username');\r\n  \r\n  // Optionally, send a request to the backend logout endpoint\r\n  fetch('http://localhost:8080/api/auth/logout', {\r\n      method: 'GET',\r\n      headers: {\r\n          'Content-Type': 'application/json',\r\n      },\r\n  }).then(() => {\r\n      // Navigate to the login page\r\n      navigate('/');\r\n  });\r\n};\r\n\r\n\r\nexport const getUser = (username) => {\r\n  return axios.get(`${API_URL}/user`, {\r\n    params: { username },\r\n  });\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,gCAAgC;AAEhD,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAK;EACpC,OAAOH,KAAK,CAACI,IAAI,CAAC,GAAGH,OAAO,WAAW,EAAEE,IAAI,EAAE;IAC7CE,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;AACJ,CAAC;AAID,OAAO,MAAMC,SAAS,GAAG,MAAOC,WAAW,IAAK;EAC9C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACI,IAAI,CAAC,GAAGH,OAAO,QAAQ,EAAEM,WAAW,EAAE;MACjEF,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAEFI,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,QAAQ,CAAC;IAEzC,IAAIA,QAAQ,CAACG,IAAI,IAAI,OAAOH,QAAQ,CAACG,IAAI,KAAK,QAAQ,EAAE;MACtD;MACAC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ,CAACG,IAAI,CAAC,CAAC;MAC3DC,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEL,QAAQ,CAACG,IAAI,CAACK,QAAQ,CAAC;MACxD,OAAOR,QAAQ,CAACG,IAAI,CAAC,CAAE;IACzB,CAAC,MAAM;MACL,MAAM,IAAIM,KAAK,CAAC,yBAAyB,CAAC;IAC5C;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdT,OAAO,CAACS,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACpC,MAAMA,KAAK;EACb;AACF,CAAC;AAED,MAAMC,YAAY,GAAIC,QAAQ,IAAK;EACjC;EACAR,YAAY,CAACS,UAAU,CAAC,MAAM,CAAC;EAC/BT,YAAY,CAACS,UAAU,CAAC,UAAU,CAAC;;EAEnC;EACAC,KAAK,CAAC,uCAAuC,EAAE;IAC3CC,MAAM,EAAE,KAAK;IACblB,OAAO,EAAE;MACL,cAAc,EAAE;IACpB;EACJ,CAAC,CAAC,CAACmB,IAAI,CAAC,MAAM;IACV;IACAJ,QAAQ,CAAC,GAAG,CAAC;EACjB,CAAC,CAAC;AACJ,CAAC;AAGD,OAAO,MAAMK,OAAO,GAAIT,QAAQ,IAAK;EACnC,OAAOhB,KAAK,CAAC0B,GAAG,CAAC,GAAGzB,OAAO,OAAO,EAAE;IAClC0B,MAAM,EAAE;MAAEX;IAAS;EACrB,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:8080/api';\nexport const API_ENDPOINTS = {\n  LOGIN: `${API_BASE_URL}/auth/login`,\n  REGISTER: `${API_BASE_URL}/auth/register`,\n  UPDATE_USER: `${API_BASE_URL}/auth/update`,\n  GET_USER: `${API_BASE_URL}/auth/user`,\n  LOGOUT: `${API_BASE_URL}/auth/logout`\n};\nexport const loginUser = async formData => {\n  const response = await fetch('http://localhost:8080/api/auth/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(formData)\n  });\n  if (!response.ok) {\n    throw new Error('Login failed: ' + response.statusText);\n  }\n  return response.json();\n};\nexport const registerUser = async userData => {\n  try {\n    const response = await axios.post(API_ENDPOINTS.REGISTER, userData);\n    return response.data;\n  } catch (error) {\n    // Improved error handling\n    if (error.response) {\n      throw new Error(error.response.data.message || 'Registration failed');\n    }\n    throw new Error('Network error');\n  }\n};\nexport const updateUser = async userData => {\n  try {\n    const response = await axios.put('http://localhost:8080/api/auth/update', userData);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const getUser = async username => {\n  try {\n    const response = await axios.get(API_ENDPOINTS.GET_USER, {\n      params: {\n        username\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw error.response ? error.response.data : new Error('Network error');\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","API_ENDPOINTS","LOGIN","REGISTER","UPDATE_USER","GET_USER","LOGOUT","loginUser","formData","response","fetch","method","headers","body","JSON","stringify","ok","Error","statusText","json","registerUser","userData","post","data","error","message","updateUser","put","getUser","username","get","params"],"sources":["D:/EAD-CW/moviebooking/src/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:8080/api';\r\n\r\nexport const API_ENDPOINTS = {\r\n  LOGIN: `${API_BASE_URL}/auth/login`,\r\n  REGISTER: `${API_BASE_URL}/auth/register`,\r\n  UPDATE_USER: `${API_BASE_URL}/auth/update`,\r\n  GET_USER: `${API_BASE_URL}/auth/user`,\r\n  LOGOUT: `${API_BASE_URL}/auth/logout`,\r\n};\r\n\r\nexport const loginUser = async (formData) => {\r\n  const response = await fetch('http://localhost:8080/api/auth/login', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(formData),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error('Login failed: ' + response.statusText);\r\n  }\r\n\r\n  return response.json(); \r\n};\r\n\r\n\r\nexport const registerUser = async (userData) => {\r\n  try {\r\n    const response = await axios.post(API_ENDPOINTS.REGISTER, userData);\r\n    return response.data;\r\n  } catch (error) {\r\n    // Improved error handling\r\n    if (error.response) {\r\n      throw new Error(error.response.data.message || 'Registration failed');\r\n    }\r\n    throw new Error('Network error');\r\n  }\r\n};\r\n\r\nexport const updateUser = async (userData) => {\r\n  try {\r\n      const response = await axios.put('http://localhost:8080/api/auth/update', userData);\r\n      return response.data;\r\n  } catch (error) {\r\n      throw error;\r\n  }\r\n};\r\n\r\nexport const getUser = async (username) => {\r\n  try {\r\n    const response = await axios.get(API_ENDPOINTS.GET_USER, { params: { username } });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response ? error.response.data : new Error('Network error');\r\n  }\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,2BAA2B;AAEhD,OAAO,MAAMC,aAAa,GAAG;EAC3BC,KAAK,EAAE,GAAGF,YAAY,aAAa;EACnCG,QAAQ,EAAE,GAAGH,YAAY,gBAAgB;EACzCI,WAAW,EAAE,GAAGJ,YAAY,cAAc;EAC1CK,QAAQ,EAAE,GAAGL,YAAY,YAAY;EACrCM,MAAM,EAAE,GAAGN,YAAY;AACzB,CAAC;AAED,OAAO,MAAMO,SAAS,GAAG,MAAOC,QAAQ,IAAK;EAC3C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;IACnEC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ;EAC/B,CAAC,CAAC;EAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,gBAAgB,GAAGR,QAAQ,CAACS,UAAU,CAAC;EACzD;EAEA,OAAOT,QAAQ,CAACU,IAAI,CAAC,CAAC;AACxB,CAAC;AAGD,OAAO,MAAMC,YAAY,GAAG,MAAOC,QAAQ,IAAK;EAC9C,IAAI;IACF,MAAMZ,QAAQ,GAAG,MAAMV,KAAK,CAACuB,IAAI,CAACrB,aAAa,CAACE,QAAQ,EAAEkB,QAAQ,CAAC;IACnE,OAAOZ,QAAQ,CAACc,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd;IACA,IAAIA,KAAK,CAACf,QAAQ,EAAE;MAClB,MAAM,IAAIQ,KAAK,CAACO,KAAK,CAACf,QAAQ,CAACc,IAAI,CAACE,OAAO,IAAI,qBAAqB,CAAC;IACvE;IACA,MAAM,IAAIR,KAAK,CAAC,eAAe,CAAC;EAClC;AACF,CAAC;AAED,OAAO,MAAMS,UAAU,GAAG,MAAOL,QAAQ,IAAK;EAC5C,IAAI;IACA,MAAMZ,QAAQ,GAAG,MAAMV,KAAK,CAAC4B,GAAG,CAAC,uCAAuC,EAAEN,QAAQ,CAAC;IACnF,OAAOZ,QAAQ,CAACc,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAMA,KAAK;EACf;AACF,CAAC;AAED,OAAO,MAAMI,OAAO,GAAG,MAAOC,QAAQ,IAAK;EACzC,IAAI;IACF,MAAMpB,QAAQ,GAAG,MAAMV,KAAK,CAAC+B,GAAG,CAAC7B,aAAa,CAACI,QAAQ,EAAE;MAAE0B,MAAM,EAAE;QAAEF;MAAS;IAAE,CAAC,CAAC;IAClF,OAAOpB,QAAQ,CAACc,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK,CAACf,QAAQ,GAAGe,KAAK,CAACf,QAAQ,CAACc,IAAI,GAAG,IAAIN,KAAK,CAAC,eAAe,CAAC;EACzE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}
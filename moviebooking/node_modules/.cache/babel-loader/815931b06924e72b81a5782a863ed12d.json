{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:8080/api';\nexport const API_ENDPOINTS = {\n  LOGIN: `${API_BASE_URL}/auth/login`,\n  REGISTER: `${API_BASE_URL}/auth/register`,\n  UPDATE_USER: `${API_BASE_URL}/auth/update`,\n  GET_USER: `${API_BASE_URL}/auth/user`,\n  LOGOUT: `${API_BASE_URL}/auth/logout`\n};\nexport const loginUser = async formData => {\n  try {\n    const encodedPassword = btoa(formData.password);\n    const response = await axios.post(API_ENDPOINTS.LOGIN, {\n      ...formData,\n      password: encodedPassword\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    if (error.response) {\n      throw new Error(error.response.data.message || 'Login failed');\n    }\n    throw new Error('Network error');\n  }\n};\nexport const registerUser = async userData => {\n  try {\n    const response = await axios.post(API_ENDPOINTS.REGISTER, userData);\n    return response.data;\n  } catch (error) {\n    if (error.response) {\n      throw new Error(error.response.data.message || 'Registration failed');\n    }\n    throw new Error('Network error');\n  }\n};\nexport const updateUser = async userData => {\n  try {\n    const response = await axios.put('http://localhost:8080/api/auth/update', userData);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const getUser = async username => {\n  try {\n    const response = await axios.get(API_ENDPOINTS.GET_USER, {\n      params: {\n        username\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw error.response ? error.response.data : new Error('Network error');\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","API_ENDPOINTS","LOGIN","REGISTER","UPDATE_USER","GET_USER","LOGOUT","loginUser","formData","encodedPassword","btoa","password","response","post","data","error","console","Error","message","registerUser","userData","updateUser","put","getUser","username","get","params"],"sources":["D:/EAD-CW/moviebooking/src/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:8080/api';\r\n\r\nexport const API_ENDPOINTS = {\r\n  LOGIN: `${API_BASE_URL}/auth/login`,\r\n  REGISTER: `${API_BASE_URL}/auth/register`,\r\n  UPDATE_USER: `${API_BASE_URL}/auth/update`,\r\n  GET_USER: `${API_BASE_URL}/auth/user`,\r\n  LOGOUT: `${API_BASE_URL}/auth/logout`,\r\n};\r\n\r\nexport const loginUser = async (formData) => {\r\n  try {\r\n    const encodedPassword = btoa(formData.password);\r\n    const response = await axios.post(API_ENDPOINTS.LOGIN, { ...formData, password: encodedPassword });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    if (error.response) {\r\n      throw new Error(error.response.data.message || 'Login failed');\r\n    }\r\n    throw new Error('Network error');\r\n  }\r\n};\r\n\r\nexport const registerUser = async (userData) => {\r\n  try {\r\n    const response = await axios.post(API_ENDPOINTS.REGISTER, userData);\r\n    return response.data;\r\n  } catch (error) {\r\n  \r\n    if (error.response) {\r\n      throw new Error(error.response.data.message || 'Registration failed');\r\n    }\r\n    throw new Error('Network error');\r\n  }\r\n};\r\n\r\nexport const updateUser = async (userData) => {\r\n  try {\r\n      const response = await axios.put('http://localhost:8080/api/auth/update', userData);\r\n      return response.data;\r\n  } catch (error) {\r\n      throw error;\r\n  }\r\n};\r\n\r\nexport const getUser = async (username) => {\r\n  try {\r\n    const response = await axios.get(API_ENDPOINTS.GET_USER, { params: { username } });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response ? error.response.data : new Error('Network error');\r\n  }\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,2BAA2B;AAEhD,OAAO,MAAMC,aAAa,GAAG;EAC3BC,KAAK,EAAE,GAAGF,YAAY,aAAa;EACnCG,QAAQ,EAAE,GAAGH,YAAY,gBAAgB;EACzCI,WAAW,EAAE,GAAGJ,YAAY,cAAc;EAC1CK,QAAQ,EAAE,GAAGL,YAAY,YAAY;EACrCM,MAAM,EAAE,GAAGN,YAAY;AACzB,CAAC;AAED,OAAO,MAAMO,SAAS,GAAG,MAAOC,QAAQ,IAAK;EAC3C,IAAI;IACF,MAAMC,eAAe,GAAGC,IAAI,CAACF,QAAQ,CAACG,QAAQ,CAAC;IAC/C,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAI,CAACZ,aAAa,CAACC,KAAK,EAAE;MAAE,GAAGM,QAAQ;MAAEG,QAAQ,EAAEF;IAAgB,CAAC,CAAC;IAClG,OAAOG,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACpB,IAAIA,KAAK,CAACH,QAAQ,EAAE;MAClB,MAAM,IAAIK,KAAK,CAACF,KAAK,CAACH,QAAQ,CAACE,IAAI,CAACI,OAAO,IAAI,cAAc,CAAC;IAChE;IACA,MAAM,IAAID,KAAK,CAAC,eAAe,CAAC;EAClC;AACF,CAAC;AAED,OAAO,MAAME,YAAY,GAAG,MAAOC,QAAQ,IAAK;EAC9C,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAI,CAACZ,aAAa,CAACE,QAAQ,EAAEiB,QAAQ,CAAC;IACnE,OAAOR,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAEd,IAAIA,KAAK,CAACH,QAAQ,EAAE;MAClB,MAAM,IAAIK,KAAK,CAACF,KAAK,CAACH,QAAQ,CAACE,IAAI,CAACI,OAAO,IAAI,qBAAqB,CAAC;IACvE;IACA,MAAM,IAAID,KAAK,CAAC,eAAe,CAAC;EAClC;AACF,CAAC;AAED,OAAO,MAAMI,UAAU,GAAG,MAAOD,QAAQ,IAAK;EAC5C,IAAI;IACA,MAAMR,QAAQ,GAAG,MAAMb,KAAK,CAACuB,GAAG,CAAC,uCAAuC,EAAEF,QAAQ,CAAC;IACnF,OAAOR,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAMA,KAAK;EACf;AACF,CAAC;AAED,OAAO,MAAMQ,OAAO,GAAG,MAAOC,QAAQ,IAAK;EACzC,IAAI;IACF,MAAMZ,QAAQ,GAAG,MAAMb,KAAK,CAAC0B,GAAG,CAACxB,aAAa,CAACI,QAAQ,EAAE;MAAEqB,MAAM,EAAE;QAAEF;MAAS;IAAE,CAAC,CAAC;IAClF,OAAOZ,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK,CAACH,QAAQ,GAAGG,KAAK,CAACH,QAAQ,CAACE,IAAI,GAAG,IAAIG,KAAK,CAAC,eAAe,CAAC;EACzE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}
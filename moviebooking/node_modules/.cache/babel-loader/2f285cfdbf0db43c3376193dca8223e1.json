{"ast":null,"code":"var _jsxFileName = \"D:\\\\EAD-CW\\\\moviebooking\\\\src\\\\Components\\\\Home\\\\Home.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport Carousel from 'react-bootstrap/Carousel';\nimport axios from 'axios';\nimport ExampleCarouselImage from '../../assets/futuristic-style-possums-wearing-clothing.jpg';\nimport './Home.css'; // Add any custom styles here if needed\n\n// Base URL for fetching sliders from backend API\nconst API_BASE_URL = 'http://localhost:8080/api/sliders';\nconst IMAGE_BASE_URL = 'http://localhost:8080/uploads/'; // Base URL for images\n\nconst Home = () => {\n  const [sliders, setSliders] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fetch sliders on component mount\n  useEffect(() => {\n    const fetchSliders = async () => {\n      try {\n        const response = await axios.get(API_BASE_URL);\n        setSliders(response.data); // Save the slider data from API response\n      } catch (error) {\n        setError('Error fetching sliders. Please try again later.');\n        console.error(error); // Log the error to the console\n      } finally {\n        setLoading(false); // Always set loading to false after the fetch\n      }\n    };\n    fetchSliders();\n  }, []);\n\n  // Display loading message if data is being fetched\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n\n  // Display error message if there was an error fetching the sliders\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, error);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Carousel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, sliders.length > 0 ? sliders.map(slider => {\n    // Clean URL construction\n    const imageUrl = slider.imageUrl && slider.imageUrl.startsWith('/uploads/') ? `http://localhost:8080${slider.imageUrl}` : slider.imageUrl && !slider.imageUrl.startsWith('http') ? `${IMAGE_BASE_URL}${slider.imageUrl}` : slider.imageUrl || ExampleCarouselImage;\n    console.log(\"Image URL:\", imageUrl); // Debug: Log the constructed image URL\n\n    return /*#__PURE__*/React.createElement(Carousel.Item, {\n      key: slider.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"d-block w-100\",\n      src: imageUrl // Use cleaned URL for the image\n      ,\n      alt: slider.title,\n      style: {\n        maxHeight: '500px',\n        objectFit: 'cover'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Carousel.Caption, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 19\n      }\n    }, slider.title), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }\n    }, slider.description)));\n  }) :\n  /*#__PURE__*/\n  // Fallback if there are no sliders available\n  React.createElement(Carousel.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"d-block w-100\",\n    src: ExampleCarouselImage,\n    alt: \"No slides\",\n    style: {\n      maxHeight: '500px',\n      objectFit: 'cover'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Carousel.Caption, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }))));\n};\nexport default Home;","map":{"version":3,"names":["React","useState","useEffect","Carousel","axios","ExampleCarouselImage","API_BASE_URL","IMAGE_BASE_URL","Home","sliders","setSliders","loading","setLoading","error","setError","fetchSliders","response","get","data","console","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","length","map","slider","imageUrl","startsWith","log","Item","key","id","className","src","alt","title","style","maxHeight","objectFit","Caption","description"],"sources":["D:/EAD-CW/moviebooking/src/Components/Home/Home.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Carousel from 'react-bootstrap/Carousel';\r\nimport axios from 'axios';\r\nimport ExampleCarouselImage from '../../assets/futuristic-style-possums-wearing-clothing.jpg';\r\nimport './Home.css'; // Add any custom styles here if needed\r\n\r\n// Base URL for fetching sliders from backend API\r\nconst API_BASE_URL = 'http://localhost:8080/api/sliders';\r\nconst IMAGE_BASE_URL = 'http://localhost:8080/uploads/'; // Base URL for images\r\n\r\nconst Home = () => {\r\n  const [sliders, setSliders] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Fetch sliders on component mount\r\n  useEffect(() => {\r\n    const fetchSliders = async () => {\r\n      try {\r\n        const response = await axios.get(API_BASE_URL);\r\n        setSliders(response.data); // Save the slider data from API response\r\n      } catch (error) {\r\n        setError('Error fetching sliders. Please try again later.');\r\n        console.error(error); // Log the error to the console\r\n      } finally {\r\n        setLoading(false); // Always set loading to false after the fetch\r\n      }\r\n    };\r\n\r\n    fetchSliders();\r\n  }, []);\r\n\r\n  // Display loading message if data is being fetched\r\n  if (loading) return <p>Loading...</p>;\r\n\r\n  // Display error message if there was an error fetching the sliders\r\n  if (error) return <p>{error}</p>;\r\n\r\n  return (\r\n    <div>\r\n      <Carousel>\r\n        {sliders.length > 0 ? (\r\n          sliders.map((slider) => {\r\n            // Clean URL construction\r\n            const imageUrl = slider.imageUrl && slider.imageUrl.startsWith('/uploads/')\r\n              ? `http://localhost:8080${slider.imageUrl}`\r\n              : slider.imageUrl && !slider.imageUrl.startsWith('http')\r\n                ? `${IMAGE_BASE_URL}${slider.imageUrl}`\r\n                : slider.imageUrl || ExampleCarouselImage;\r\n\r\n            console.log(\"Image URL:\", imageUrl); // Debug: Log the constructed image URL\r\n            \r\n            return (\r\n              <Carousel.Item key={slider.id}>\r\n                <img\r\n                  className=\"d-block w-100\"\r\n                  src={imageUrl} // Use cleaned URL for the image\r\n                  alt={slider.title}\r\n                  style={{ maxHeight: '500px', objectFit: 'cover' }}\r\n                />\r\n                <Carousel.Caption>\r\n                  <h3>{slider.title}</h3>\r\n                  <p>{slider.description}</p>\r\n                </Carousel.Caption>\r\n              </Carousel.Item>\r\n            );\r\n          })\r\n        ) : (\r\n          // Fallback if there are no sliders available\r\n          <Carousel.Item>\r\n            <img\r\n              className=\"d-block w-100\"\r\n              src={ExampleCarouselImage}\r\n              alt=\"No slides\"\r\n              style={{ maxHeight: '500px', objectFit: 'cover' }}\r\n            />\r\n            <Carousel.Caption>\r\n              \r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n        )}\r\n      </Carousel>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}
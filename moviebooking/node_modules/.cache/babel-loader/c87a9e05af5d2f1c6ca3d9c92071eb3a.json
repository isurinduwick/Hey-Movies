{"ast":null,"code":"var _jsxFileName = \"D:\\\\EAD-CW\\\\moviebooking\\\\src\\\\Pages\\\\Settings.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { updateUser, getUser } from '../api';\nimport './Settings.css';\nconst Settings = () => {\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    name: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [message, setMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [errors, setErrors] = useState({});\n  useEffect(() => {\n    fetchUserData();\n  }, []);\n  const fetchUserData = async () => {\n    setLoading(true);\n    try {\n      const username = localStorage.getItem('username');\n      const userData = await getUser(username);\n      setFormData(prevState => ({\n        ...prevState,\n        username: userData.username || '',\n        email: userData.email || '',\n        name: userData.name || ''\n      }));\n    } catch (error) {\n      setMessage('Failed to load user data. Please try again later.');\n      console.error('Error fetching user data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n    setErrors(prevErrors => ({\n      ...prevErrors,\n      [name]: ''\n    }));\n  };\n  const validateForm = () => {\n    const newErrors = {};\n    if (formData.email && !/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      newErrors.email = 'Invalid email address';\n    }\n    if (formData.password && formData.password.length < 8) {\n      newErrors.password = 'Password must be at least 8 characters long';\n    }\n    if (formData.password !== formData.confirmPassword) {\n      newErrors.confirmPassword = 'Passwords do not match';\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n    if (!validateForm()) return;\n    setLoading(true);\n    try {\n      const dataToSend = {\n        ...formData\n      };\n      if (dataToSend.password) {\n        // Remove this line in production. Passwords should be hashed on the server side.\n        // dataToSend.password = btoa(dataToSend.password);\n      } else {\n        // If password is not being updated, remove it from the request\n        delete dataToSend.password;\n      }\n      delete dataToSend.confirmPassword;\n      const updatedUser = await updateUser(dataToSend);\n      setMessage('Profile updated successfully!');\n      localStorage.setItem('username', updatedUser.username);\n    } catch (error) {\n      setMessage('Error updating profile. Please try again.');\n      console.error('Error updating profile:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 16\n      }\n    }, \"Loading...\");\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"settings-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \"Account Settings\"), message && /*#__PURE__*/React.createElement(\"p\", {\n    className: `message ${message.includes('Error') ? 'error' : 'success'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }, message), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleFormSubmit,\n    className: \"settings-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn-save\",\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, loading ? 'Saving...' : 'Save Changes')));\n};\nexport default Settings;","map":{"version":3,"names":["React","useState","useEffect","updateUser","getUser","Settings","formData","setFormData","username","email","name","password","confirmPassword","message","setMessage","loading","setLoading","errors","setErrors","fetchUserData","localStorage","getItem","userData","prevState","error","console","handleInputChange","e","value","target","prevErrors","validateForm","newErrors","test","length","Object","keys","handleFormSubmit","preventDefault","dataToSend","updatedUser","setItem","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","includes","onSubmit","type","disabled"],"sources":["D:/EAD-CW/moviebooking/src/Pages/Settings.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { updateUser, getUser } from '../api';\r\nimport './Settings.css';\r\n\r\nconst Settings = () => {\r\n    const [formData, setFormData] = useState({\r\n        username: '',\r\n        email: '',\r\n        name: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n    });\r\n    const [message, setMessage] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    useEffect(() => {\r\n        fetchUserData();\r\n    }, []);\r\n\r\n    const fetchUserData = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const username = localStorage.getItem('username');\r\n            const userData = await getUser(username);\r\n            setFormData(prevState => ({\r\n                ...prevState,\r\n                username: userData.username || '',\r\n                email: userData.email || '',\r\n                name: userData.name || ''\r\n            }));\r\n        } catch (error) {\r\n            setMessage('Failed to load user data. Please try again later.');\r\n            console.error('Error fetching user data:', error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }));\r\n        setErrors(prevErrors => ({ ...prevErrors, [name]: '' }));\r\n    };\r\n\r\n    const validateForm = () => {\r\n        const newErrors = {};\r\n        if (formData.email && !/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n            newErrors.email = 'Invalid email address';\r\n        }\r\n        if (formData.password && formData.password.length < 8) {\r\n            newErrors.password = 'Password must be at least 8 characters long';\r\n        }\r\n        if (formData.password !== formData.confirmPassword) {\r\n            newErrors.confirmPassword = 'Passwords do not match';\r\n        }\r\n        setErrors(newErrors);\r\n        return Object.keys(newErrors).length === 0;\r\n    };\r\n\r\n    const handleFormSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (!validateForm()) return;\r\n\r\n        setLoading(true);\r\n        try {\r\n            const dataToSend = { ...formData };\r\n            if (dataToSend.password) {\r\n                // Remove this line in production. Passwords should be hashed on the server side.\r\n                // dataToSend.password = btoa(dataToSend.password);\r\n            } else {\r\n                // If password is not being updated, remove it from the request\r\n                delete dataToSend.password;\r\n            }\r\n            delete dataToSend.confirmPassword;\r\n\r\n            const updatedUser = await updateUser(dataToSend);\r\n            setMessage('Profile updated successfully!');\r\n            localStorage.setItem('username', updatedUser.username);\r\n        } catch (error) {\r\n            setMessage('Error updating profile. Please try again.');\r\n            console.error('Error updating profile:', error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"settings-container\">\r\n            <h1>Account Settings</h1>\r\n            {message && <p className={`message ${message.includes('Error') ? 'error' : 'success'}`}>{message}</p>}\r\n            <form onSubmit={handleFormSubmit} className=\"settings-form\">\r\n                {/* Form fields remain the same */}\r\n                {/* ... */}\r\n                <button type=\"submit\" className=\"btn-save\" disabled={loading}>\r\n                    {loading ? 'Saving...' : 'Save Changes'}\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Settings;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}
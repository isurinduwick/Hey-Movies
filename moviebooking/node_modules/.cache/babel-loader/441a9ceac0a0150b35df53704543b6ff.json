{"ast":null,"code":"var _jsxFileName = \"D:\\\\EAD-CW\\\\moviebooking\\\\src\\\\Pages\\\\Settings.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Settings.css'; // Ensure you have styles here\n\nconst Settings = () => {\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    name: '',\n    password: ''\n  });\n  const [message, setMessage] = useState('');\n\n  // Fetch existing user details from backend or localStorage\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const response = await axios.get('http://localhost:9000/api/auth/user', {\n          params: {\n            username: localStorage.getItem('username')\n          }\n        });\n        if (response.data) {\n          const userData = response.data;\n          setFormData({\n            username: userData.username || '',\n            email: userData.email || '',\n            name: userData.name || '',\n            password: '' // Leave password empty initially\n          });\n        } else {\n          setMessage('Failed to load user data.');\n        }\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n        setMessage('Failed to load user data.');\n      }\n    };\n    fetchUserData();\n  }, []);\n\n  // Handle input changes in the form\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n\n  // Handle form submission to update user details\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.put('http://localhost:8080/api/auth/update', formData, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.data) {\n        localStorage.setItem('user', JSON.stringify(response.data)); // Update localStorage with new user info\n        setMessage('Profile updated successfully!');\n      } else {\n        setMessage('Failed to update profile.');\n      }\n    } catch (error) {\n      console.error('Error updating profile:', error);\n      setMessage('Error updating profile.');\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"settings-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"Account Settings\"), message && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }, message), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleFormSubmit,\n    className: \"settings-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"username\",\n    value: formData.username,\n    onChange: handleInputChange,\n    required: true,\n    readOnly: true // Don't allow username to be changed\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    value: formData.email,\n    onChange: handleInputChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, \"Full Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    value: formData.name,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    value: formData.password,\n    onChange: handleInputChange,\n    placeholder: \"Enter new password if you want to change it\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn-save\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, \"Save Changes\")));\n};\nexport default Settings;","map":{"version":3,"names":["React","useState","useEffect","axios","Settings","formData","setFormData","username","email","name","password","message","setMessage","fetchUserData","response","get","params","localStorage","getItem","data","userData","error","console","handleInputChange","e","value","target","handleFormSubmit","preventDefault","put","headers","setItem","JSON","stringify","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","onChange","required","readOnly","placeholder"],"sources":["D:/EAD-CW/moviebooking/src/Pages/Settings.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './Settings.css'; // Ensure you have styles here\r\n\r\nconst Settings = () => {\r\n    const [formData, setFormData] = useState({\r\n        username: '',\r\n        email: '',\r\n        name: '',\r\n        password: ''\r\n    });\r\n    const [message, setMessage] = useState('');\r\n\r\n    // Fetch existing user details from backend or localStorage\r\n    useEffect(() => {\r\n        const fetchUserData = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:9000/api/auth/user', {\r\n                    params: { username: localStorage.getItem('username') }\r\n                });\r\n\r\n                if (response.data) {\r\n                    const userData = response.data;\r\n                    setFormData({\r\n                        username: userData.username || '',\r\n                        email: userData.email || '',\r\n                        name: userData.name || '',\r\n                        password: ''  // Leave password empty initially\r\n                    });\r\n                } else {\r\n                    setMessage('Failed to load user data.');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching user data:', error);\r\n                setMessage('Failed to load user data.');\r\n            }\r\n        };\r\n\r\n        fetchUserData();\r\n    }, []);\r\n\r\n    // Handle input changes in the form\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({\r\n            ...formData,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    // Handle form submission to update user details\r\n    const handleFormSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await axios.put('http://localhost:8080/api/auth/update', formData, {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            });\r\n\r\n            if (response.data) {\r\n                localStorage.setItem('user', JSON.stringify(response.data));  // Update localStorage with new user info\r\n                setMessage('Profile updated successfully!');\r\n            } else {\r\n                setMessage('Failed to update profile.');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error updating profile:', error);\r\n            setMessage('Error updating profile.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"settings-container\">\r\n            <h1>Account Settings</h1>\r\n            {message && <p className=\"message\">{message}</p>}\r\n            <form onSubmit={handleFormSubmit} className=\"settings-form\">\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"username\">Username</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        value={formData.username}\r\n                        onChange={handleInputChange}\r\n                        required\r\n                        readOnly // Don't allow username to be changed\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        value={formData.email}\r\n                        onChange={handleInputChange}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"name\">Full Name</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={formData.name}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={formData.password}\r\n                        onChange={handleInputChange}\r\n                        placeholder=\"Enter new password if you want to change it\"\r\n                    />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn-save\">Save Changes</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Settings;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}